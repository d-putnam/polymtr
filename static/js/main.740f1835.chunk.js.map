{"version":3,"sources":["ToneRack.js","components/Channel/components/AttackDecay.js","components/Channel/components/Pattern.js","components/Channel/components/Equalizer.js","components/Channel/components/Volume.js","components/Channel/components/KickControl.js","components/Channel/components/HatsControl.js","components/Channel/components/SnareControl.js","components/Channel/components/PercControl.js","components/Channel/Channel.js","components/Reverb/Reverb.js","components/Delay/Delay.js","components/Compressor/Compressor.js","components/Power/Power.js","App.js","index.js"],"names":["OutputChain","this","output","Tone","toDestination","compressor","connect","verbEQ","verb","decay","wet","value","delayFilter","delayFilterFreq","units","frequency","delayFilterRes","Q","delay","subdivisions","delayTime","delayFeedback","feedback","v","low","mid","high","threshold","volume","ratio","Track","partSend","partVerbSend","partDelaySend","partEQ","node","events","sequence","part","envelope","attack","amp","partGain","gain","rampTo","Kick","partFilter","partFilterFreq","partFilterRes","partDist","partDetune","detune","octaves","sustain","release","length","density","notes","time","note","start","callback","triggerAttackRelease","distortion","Hats","harmonicity","partFreq","partTune","Snare","noise","type","Perc","attackNoise","dampening","resonance","order","AttackDecay","props","envelopeGraph","React","createRef","attackSlider","decaySlider","state","track","nxEnvelopeGraph","Nexus","Envelope","current","x","y","nxAttackSlider","Slider","on","updateAttack","setState","movePoint","nxDecaySlider","updateDecay","className","ref","PureComponent","Pattern","pattern","dV","euclid","patternGraph","lengthSlider","lengthNumber","densitySlider","densityNumber","patternLength","noteDensity","densityValue","isDrawing","mouseDown","mouseUp","initSequence","sequenceCallback","nxPatternGraph","stepper","Math","floor","progress","next","Sequencer","borderColor","colorize","matrix","set","row","querySelectorAll","forEach","block","style","strokeWidth","nxLengthSlider","changePatternLength","nxLengthNumber","Number","link","classList","add","nxDensitySlider","round","changeDensityPercentage","nxDensityNumber","changePatternDensity","prevProps","prevState","isPlaying","updatePattern","columns","max","e","rect","target","getBoundingClientRect","rectSize","right","left","xPer","clientX","change","console","log","rotateArray","amount","array","i","unshift","pop","abs","push","shift","graphOverlay","onMouseDown","dragStart","bind","onMouseUp","dragEnd","Component","slope","result","previous","Equalizer","nxLow","Dial","updateEQLow","nxMid","updateEQMid","nxHigh","updateEQHigh","Volume","volumeSlider","verbSlider","delaySlider","size","window","innerWidth","nxVolumeSlider","updateVolume","nxVerbSlider","updateVerbSend","nxDelaySlider","updateDelaySend","KickControl","cutoff","fm","nxDistortion","updateDistortion","nxCutoff","updateCutoff","nxResonance","updateResonance","nxFM","updateFM","nxFrequency","updateFreq","HatsControl","nxDetune","updateDetune","nxHarmonicity","updateHarmonicity","SnareControl","noiseType","nxNoiseType","RadioButton","res","updateNoiseType","PercControl","updateFrequency","Channel","connectNode","outputChain","connectVerb","connectDelay","toUpperCase","fxChain","Reverb","nxDecay","updateVerbDecay","Delay","filterFreq","filterRes","updateDelayTime","nxDelayTime","nxFeedback","updateDelayFeedback","nxFilterFreq","updateDelayFilterCutoff","nxFilterRes","updateDelayFilterResonance","Compressor","nxThreshold","updateCompressorThreshold","nxRatio","updateCompressorRatio","Power","powerSwitch","bpmNumber","bpm","nxPowerSwitch","Toggle","stateHandler","resume","stop","nxTempoNumber","refreshDelayTime","App","colors","fill","accent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.740f1835.chunk.js","sourcesContent":["import * as Tone from 'tone'\n\nclass OutputChain {\n  constructor() {\n    this.output = new Tone.Volume(0).toDestination()\n    this.compressor = new Tone.Compressor(-10, 2).connect(this.output)\n    \n    this.verbEQ = new Tone.EQ3().connect(this.compressor)\n      this.verb = new Tone.Reverb().connect(this.verbEQ)\n      this.verb.decay = 2.5;\n      this.verb.wet.value = 1;\n\n    this.delayFilter = new Tone.Filter(20000, \"lowpass\").connect(this.compressor)\n      this.delayFilterFreq = new Tone.Signal({\n        value: \"20000\",\n        units: \"frequency\"\n      }).connect(this.delayFilter.frequency);\n      this.delayFilterRes = new Tone.Signal({\n        value: \"10\",\n        units: \"frequency\"\n      }).connect(this.delayFilter.Q);\n    this.delay = new Tone.PingPongDelay(\"4n\", 0.3).connect(this.delayFilter);\n      this.subdivisions = ['2n', '4n', '8n', '16n', '16t']\n      this.delayTime = '4n'\n      this.delayFeedback = new Tone.Signal({\n        value: \"0.3\",\n        units: \"normalRange\"\n      }).connect(this.delay.feedback);\n  }\n\n  updateEQLow(v) {\n    this.verbEQ.low.value = v\n  }\n\n  updateEQMid(v) {\n    this.verbEQ.mid.value = v\n  }\n\n  updateEQHigh(v) {\n    this.verbEQ.high.value = v\n  }\n\n  updateVerbDecay(v) {\n    this.verb.decay = v\n  }\n\n  updateDelayTime(v) {\n    this.delay.delayTime.value = this.subdivisions[v]\n    this.delayTime = this.subdivisions[v]\n  }\n\n  refreshDelayTime() {\n    this.delay.delayTime.value = this.delayTime\n  }\n\n  updateDelayFeedback(v) {\n    this.delayFeedback.value = v\n  }\n\n  updateDelayFilterCutoff(v) {\n    this.delayFilterFreq.value = v\n  }\n\n  updateDelayFilterResonance(v) {\n    this.delayFilterRes.value = v\n  }\n  \n  updateCompressorThreshold(v) {\n    this.compressor.threshold.value = v\n    // adjust makeup gain\n    this.output.volume.value = v*-0.5\n  }\n\n  updateCompressorRatio(v) {\n    this.compressor.ratio.value = v\n  }\n}\n\n\nclass Track {\n  constructor() {\n    this.partSend = new Tone.Gain(1)\n    this.partVerbSend = new Tone.Gain(0)\n    this.partDelaySend = new Tone.Gain(0)\n    this.partEQ = new Tone.EQ3()\n      .connect(this.partSend)\n      .connect(this.partVerbSend)\n      .connect(this.partDelaySend)\n  }\n\n  connectNode(node) {\n    this.partSend.connect(node)\n  }\n\n  connectVerb(node) {\n    this.partVerbSend.connect(node)\n  }\n\n  connectDelay(node) {\n    this.partDelaySend.connect(node)\n  }\n\n  updatePattern(events) {\n    this.sequence.events = events\n  }\n\n  updateAttack(v) {\n    this.part.envelope.attack = v;\n  }\n\n  updateDecay(v) {\n    this.part.envelope.decay = v;\n  }\n\n  updateVolume(v) {\n    let amp = v / 127\n    this.partGain.gain.rampTo(amp, 0.05)\n  }\n\n  updateVerbSend(v) {\n    let amp = v / 127\n    this.partVerbSend.gain.rampTo(amp, 0.05)\n  }\n\n  updateDelaySend(v) {\n    let amp = v / 127\n    this.partDelaySend.gain.rampTo(amp, 0.05)\n  }\n\n  updateEQLow(v) {\n    this.partEQ.low.value = v\n  }\n\n  updateEQMid(v) {\n    this.partEQ.mid.value = v\n  }\n\n  updateEQHigh(v) {\n    this.partEQ.high.value = v\n  }\n}\n\n\nclass Kick extends Track {\n  constructor() {\n    super()\n    this.partFilter = new Tone.Filter(60, \"highpass\").connect(this.partEQ);\n    this.partFilterFreq = new Tone.Signal({\n      value: \"60\",\n      units: \"frequency\"\n    }).connect(this.partFilter.frequency);\n    // Set up a signal for controlling the filter resonance\n    this.partFilterRes = new Tone.Signal({\n      value: \"10\",\n      units: \"frequency\"\n    }).connect(this.partFilter.Q);\n\n    this.partDist = new Tone.Distortion(.157).connect(this.partFilter);\n    this.partGain = new Tone.Gain(0.5).connect(this.partDist);\n\n    this.part = new Tone.MembraneSynth().connect(this.partGain)\n      this.frequency = '47'\n      this.partDetune = new Tone.Signal({\n        value: \"C4\",\n        units: \"frequency\"\n      }).connect(this.part.detune);\n      this.part.octaves = 2.9\n      this.part.envelope.attack = 0.01\n      this.part.envelope.decay = 0.3\n      this.part.envelope.sustain = 0;\n      this.part.envelope.release = 0;\n  }\n\n  get envelope() {\n    return {\n      attack: 0.01, decay: 0.3\n    }\n  }\n\n  get pattern() {\n    return {\n      length: 4,\n      density: 1,\n    }\n  }\n\n  initSequence(notes) {\n    this.sequence = new Tone.Sequence((time, note) => {\n    }, notes, '16n').start();\n  }\n  \n  sequenceCallback(callback) {\n    this.sequence.callback = (time, note) => {\n      this.part.triggerAttackRelease(this.frequency, '+0.1', time, note);\n      callback()\n    }\n  }\n\n  updateDistortion(v) {\n    this.partDist.distortion = v / 127\n  }\n\n  updateCutoff(v) {\n    this.partFilterFreq.value = v\n  }\n\n  updateResonance(v) {\n    this.partFilterRes.value = v\n  }\n\n  updateFM(v) {\n    this.part.octaves = v\n  }\n\n  updateFreq(v) {\n    this.frequency = v\n  }\n}\n\n\nclass Hats extends Track {\n  constructor() {\n    super()\n    this.partGain = new Tone.Gain(0.5).connect(this.partEQ);\n    this.part = new Tone.MetalSynth().connect(this.partGain);\n    this.part.harmonicity = 7.85\n    this.partFreq = new Tone.Signal({\n      value: \"279\",\n      units: \"frequency\"\n    }).connect(this.part.frequency);\n    this.partTune = new Tone.Signal({\n      value: \"926\",\n      units: \"frequency\"\n    }).connect(this.part.detune);\n    this.part.envelope.attack = 0.01;\n    this.part.envelope.decay = 0.128;\n    this.part.envelope.sustain = 0;\n    this.part.envelope.release = 0;\n  }\n\n  get envelope() {\n    return {\n      attack: 0.01, decay: 0.128\n    }\n  }\n\n  get pattern() {\n    return {\n      length: 10,\n      density: 3,\n    }\n  }\n\n  initSequence(notes) {\n    this.sequence = new Tone.Sequence((time, note) => {\n    }, notes, '16n').start();\n  }\n\n  sequenceCallback(callback) {\n    this.sequence.callback = (time, note) => {\n      this.part.triggerAttackRelease(\"A4\", '+0.1', time, note);\n      callback()\n    }\n  }\n\n  updateFreq(v) {\n    this.partFreq.value = v\n  }\n\n  updateDetune(v) {\n    this.partTune.value = v\n  }\n\n  updateHarmonicity(v) {\n    this.part.harmonicity = v\n  }\n}\n\n\n\nclass Snare extends Track {\n  constructor() {\n    super()\n    this.partFilter = new Tone.Filter(7556, \"lowpass\").connect(this.partEQ);\n    this.partFilterFreq = new Tone.Signal({\n      value: \"7561\",\n      units: \"frequency\"\n    }).connect(this.partFilter.frequency);\n    this.partFilterRes = new Tone.Signal({\n      value: \"9.5\",\n      units: \"frequency\"\n    }).connect(this.partFilter.Q);\n    this.partGain = new Tone.Gain(0.5).connect(this.partFilter);\n    this.part = new Tone.NoiseSynth().connect(this.partGain)\n    this.part.noise.type = \"pink\"\n    this.part.envelope.attack = 0.01\n    this.part.envelope.decay = 0.247\n    this.part.envelope.sustain = 0;\n    this.part.envelope.release = 0;\n  }\n\n  get envelope() {\n    return {\n      attack: 0.01, decay: 0.247\n    }\n  }\n\n  get pattern() {\n    return {\n      length: 7,\n      density: 3,\n    }\n  }\n\n  initSequence(notes) {\n    this.sequence = new Tone.Sequence((time, note) => {\n    }, notes, '16n').start();\n  }\n\n  sequenceCallback(callback) {\n    this.sequence.callback = (time, note) => {\n      this.part.triggerAttackRelease(\"+0.3\", time, note);\n      callback()\n    }\n  }\n\n  updateCutoff(v) {\n    this.partFilterFreq.value = v\n  }\n\n  updateResonance(v) {\n    this.partFilterRes.value = v\n  }\n\n  updateNoiseType(v) {\n    this.part.noise.type = v\n  }\n}\n\n\nclass Perc extends Track {\n  constructor() {\n    super()\n    this.partDist = new Tone.Chebyshev(45).connect(this.partEQ);\n    this.partGain = new Tone.Gain(0.5).connect(this.partDist);\n    this.frequency = 281.6\n    this.part = new Tone.MembraneSynth({\n      attackNoise: 1,\n      dampening: 3000,\n      resonance: 0.85,\n      octaves: 0.5\n    }).connect(this.partGain)\n    this.partDetune = new Tone.Signal({\n      value: \"440\",\n      units: \"frequency\"\n    }).connect(this.part.detune);\n    this.part.envelope.attack = 0.02\n    this.part.envelope.decay = 0.12\n    this.part.envelope.sustain = 0;\n    this.part.envelope.release = 0;  \n  }\n\n  get envelope() {\n    return {\n      attack: 0.02, decay: 0.12\n    }\n  }\n\n  get pattern() {\n    return {\n      length: 11,\n      density: 2,\n    }\n  }\n\n  initSequence(notes) {\n    this.sequence = new Tone.Sequence((time, note) => {\n    }, notes, '16n').start();\n  }\n\n  sequenceCallback(callback) {\n    this.sequence.callback = (time, note) => {\n      this.part.triggerAttackRelease(this.frequency, \"16n\", time, note);\n      callback()\n    }\n  }\n\n  updateFrequency(v) {\n    this.frequency = v\n  }\n\n  updateDetune(v) {\n    this.partDetune.value = v\n  }\n\n  updateDistortion(v) {\n    if (v % 2 === 0) {\n      this.partDist.order = v - 1;\n    } else {\n      this.partDist.order = v\n    }\n  }\n\n  updateFM(v) {\n    this.part.octaves = v\n  }\n}\n\nexport { OutputChain, Kick, Hats, Snare, Perc };\n","import React from 'react';\nimport Nexus from 'nexusui'\nimport './AttackDecay.css';\n\nclass AttackDecay extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.envelopeGraph = React.createRef()\n    this.attackSlider = React.createRef()\n    this.decaySlider = React.createRef()\n    this.state = {\n      attack: props.track.envelope.attack,\n      decay: props.track.envelope.decay\n    }\n  }\n\n  componentDidMount() {\n    this.nxEnvelopeGraph = new Nexus.Envelope(this.envelopeGraph.current, {\n      'size': [55,55],\n      'noNewPoints': true,\n      'points': [\n        {\n          x: 0.1,\n          y: 0.0\n        },\n        {\n          x: 0.1 +  this.state.attack * 1.5,\n          y: 0.825\n        },\n        {\n          x: 0.1 + this.state.decay * 1.3,\n          y: 0.0\n        },\n      ]\n    });\n    \n    this.nxAttackSlider = new Nexus.Slider(this.attackSlider.current, {\n      'size': [20,55],\n      'mode': 'absolute',\n      'min': .01, 'max': .15, 'step': 0,\n      'value':  this.state.attack\n    });\n    this.nxAttackSlider.on('change', v => {\n      this.props.track.updateAttack(this.state.attack)\n      this.setState({attack: v})\n      this.nxEnvelopeGraph.movePoint(1, 0.1 + v*1.5, 0.825)\n      this.nxEnvelopeGraph.movePoint(2, 0.1 + this.state.decay*1.3 + v, 0.)\n    });\n\n    this.nxDecaySlider = new Nexus.Slider(this.decaySlider.current, {\n      'size': [20,55],\n      'mode': 'absolute',\n      'min': 0, 'max': .5, 'step': 0,\n      'value':  this.state.decay\n    });\n    this.nxDecaySlider.on('change', v => {\n      this.props.track.updateDecay(this.state.decay)\n      this.setState({decay: v})\n      this.nxEnvelopeGraph.movePoint(2,  0.1 + this.state.attack + v*1.3, 0.)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"AttackDecay\">\n        <label>┌ENVELOPE┐</label>\n        <div className=\"controlWrap\">\n          <div ref={this.attackSlider} />\n          <div ref={this.envelopeGraph} className=\"noClick\" />\n          <div ref={this.decaySlider} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AttackDecay;","import React, { Component } from 'react';\nimport Nexus from 'nexusui'\nimport './Pattern.css';\n\n\nclass Pattern extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let length = props.track.pattern.length\n        //Math.floor(Math.random() * 11) + 5\n    let density = props.track.pattern.density\n        //Math.floor(Math.random() * length / 1.5)\n        //if (density === 0) {density = 1}\n    let dV = density / length\n    let notes = euclid(length, density)\n\n    this.patternGraph = React.createRef()\n    this.lengthSlider = React.createRef()\n    this.lengthNumber = React.createRef()\n    this.densitySlider = React.createRef()\n    this.densityNumber = React.createRef()\n\n    this.state = {\n      notes: notes,\n      patternLength: length,\n      noteDensity: density,\n      densityValue: dV,\n\n      isDrawing: false,\n      mouseDown: 0, \n      mouseUp: 0\n    }\n  }\n\n  componentDidMount() {\n    this.props.track.initSequence(this.state.notes);\n    this.props.track.sequenceCallback(() => {\n      this.nxPatternGraph.stepper.value = Math.floor(this.props.track.sequence.progress * this.state.patternLength) - 1;\n      this.nxPatternGraph.next()\n    });\n\n    this.nxPatternGraph = new Nexus.Sequencer(this.patternGraph.current, {\n      'size': [270,25],\n      'mode': 'toggle',\n      'rows': 1,\n      'columns': this.state.patternLength,\n      'paddingRow': 0,\n      'paddingColumn': 5\n    });\n    this.borderColor = \"#ff0000\"\n    this.nxPatternGraph.colorize(\"mediumLight\", this.borderColor);\n    this.nxPatternGraph.matrix.set.row(0, this.state.notes)\n    let blocks = this.patternGraph.current.querySelectorAll('rect');\n    blocks.forEach(block => {\n      block.style.strokeWidth = 5\n    })\n\n    this.nxLengthSlider = new Nexus.Slider(this.lengthSlider.current, {\n      'size': [270,20],\n      'mode': 'absolute',\n      'min': 2, 'max': 16,\n      'step': 1, 'value': this.state.patternLength\n    });\n    this.nxLengthSlider.on('change', v => {\n      this.changePatternLength(v)\n    });\n    this.nxLengthNumber = new Nexus.Number(this.lengthNumber.current, {\n      'size': [35,30],\n      'value': this.state.patternLength,\n      'min': 2,\n      'max': 16,\n      'step': 1\n    })\n    this.nxLengthNumber.link(this.nxLengthSlider)\n    this.nxLengthNumber.colorize(\"fill\", \"#ffffffa8\");\n    this.lengthNumber.current.classList.add('box','left')\n\n    this.nxDensitySlider = new Nexus.Slider(this.densitySlider.current, {\n      'size': [270,20],\n      'mode': 'absolute',\n      'min': 1, 'max': 100,\n      'step': 1, 'value': Math.round(this.state.densityValue * 100)\n    });\n    this.nxDensitySlider.on('change', v => {\n      this.changeDensityPercentage(v)\n    });\n\n    this.nxDensityNumber = new Nexus.Number(this.densityNumber.current, {\n      'size': [35,30],\n      'value': this.state.noteDensity,\n      'min': 1,\n      'max': this.state.patternLength,\n      'step': 1\n    })\n    this.nxDensityNumber.on('change', v => {\n      this.changePatternDensity(v)\n    });  \n    this.nxDensityNumber.colorize(\"fill\", \"#ffffffa8\");\n    this.densityNumber.current.classList.add('box','right')\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevProps.isPlaying !== this.props.isPlaying) {\n      if (this.props.isPlaying === false) {\n        this.nxPatternGraph.colorize(\"mediumLight\", \"#ff000000\");\n        this.nxPatternGraph.next()\n      } else {\n        this.nxPatternGraph.colorize(\"mediumLight\", this.borderColor);\n      }\n    }\n\n    if (prevState.notes !== this.state.notes) {\n      this.props.track.updatePattern(this.state.notes)\n      this.nxPatternGraph.matrix.set.row(0, this.state.notes)\n      let blocks = this.patternGraph.current.querySelectorAll('rect');\n      blocks.forEach(block => {\n        block.style.strokeWidth = 5\n      })\n    } \n\n    if (prevState.mouseUp !== this.state.mouseUp) {\n      this.props.track.updatePattern(this.state.notes)\n      this.nxPatternGraph.matrix.set.row(0, this.state.notes)\n      let blocks = this.patternGraph.current.querySelectorAll('rect');\n      blocks.forEach(block => {\n        block.style.strokeWidth = 5\n      })    \n    }\n\n    if (prevState.patternLength !== this.state.patternLength) {\n      this.nxPatternGraph.columns = this.state.patternLength\n      this.props.track.sequenceCallback(() => {\n        this.nxPatternGraph.stepper.value = Math.floor(this.props.track.sequence.progress * this.state.patternLength) - 1;\n        this.nxPatternGraph.next()\n      });\n      this.nxDensityNumber.max = this.state.patternLength\n      this.nxLengthNumber.value = this.state.patternLength\n    }\n\n    \n    if (prevState.noteDensity !== this.state.noteDensity) {\n      this.nxDensityNumber.value = this.state.noteDensity\n    }\n\n    if (prevState.densityValue !== this.state.densityValue) {\n      this.nxDensitySlider.value = this.state.densityValue * 100\n    }\n  }\n\n  changePatternLength(v) {\n    this.setState({patternLength: v})\n    this.setState({noteDensity: \n      this.state.noteDensity > v \n        ? v\n        : this.state.noteDensity\n    })\n    this.setState({densityValue: this.state.noteDensity / this.state.patternLength})\n    let pattern = euclid(this.state.patternLength, this.state.noteDensity)\n    this.setState({notes: pattern})\n  }\n\n  changePatternDensity(v) {\n    this.setState({densityValue: v/this.state.patternLength})\n    this.setState({noteDensity: v})\n    let pattern = euclid(this.state.patternLength, this.state.noteDensity)\n    this.setState({notes: pattern})\n  }\n\n  changeDensityPercentage(v) {\n    this.setState({densityValue: v/100})\n    this.setState({noteDensity: Math.round((v/100) * this.state.patternLength)})\n    let pattern = euclid(this.state.patternLength, this.state.noteDensity)\n    this.setState({notes: pattern})\n  }\n\n  dragStart(e) {\n    this.setState({isDrawing: true})\n    let rect = e.target.getBoundingClientRect();\n    let rectSize = rect.right - rect.left\n    let xPos = e.clientX - rect.left; \n    let xPer = xPos / rectSize\n    this.setState({mouseDown: xPer})\n  }\n\n  dragEnd(e) {\n    if (this.state.isDrawing) {\n      let rect = e.target.getBoundingClientRect();\n      let rectSize = rect.right - rect.left\n      let xPos = e.clientX - rect.left; \n      let xPer = xPos / rectSize\n      this.setState({mouseUp: xPer})\n      let change = Math.floor((xPer - this.state.mouseDown) * this.state.patternLength)\n      console.log('CHANGE: ', change)\n      this.setState({notes: this.rotateArray(change)})\n    }\n    this.setState({isDrawing: false})\n  }\n\n  rotateArray(amount) {\n    let array = this.state.notes\n    if (amount > 0) {\n      for (let i=0; i<amount; i++) {\n        array.unshift(array.pop())\n      }\n    } else {\n      amount = Math.abs(amount)\n      for (let i=0; i<amount; i++) {\n        array.push(array.shift())\n      }\n    }\n    return array\n  }\n\n  render() {\n    return (\n      <div className=\"Pattern\">\n\n        <div className=\"infoWrap left hideSmall\">\n          <div ref={this.graphOverlay} className=\"labelWrap left\">\n            <label>\n              Pattern Length\n            </label>\n            <div ref={this.lengthNumber} />\n          </div>\n          <label>\n            ⟶\n          </label>\n        </div>\n\n        <div className=\"patternWrap\">\n          <div ref={this.lengthSlider} />\n          <div onMouseDown={this.dragStart.bind(this)} onMouseUp={this.dragEnd.bind(this)} >\n            <div ref={this.patternGraph} className=\"noClick\" />\n          </div>\n          <div ref={this.densitySlider} />\n        </div>\n\n        <div className=\"infoWrap right hideSmall\">\n          <label>\n            ⟵\n          </label>\n          <div className=\"labelWrap right\">\n            <div ref={this.densityNumber} className=\"box right\" />\n            <label>\n              Pattern Density\n            </label>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\n// thanks Jeff Holtzkener for the inspo\n// https://medium.com/code-music-noise/euclidean-rhythms-391d879494df\nconst euclid = (length, density,) => {\n  let slope = density / length\n  let result = []\n  let previous = null\n  for (let i=0; i<length; i++) {\n      let current = Math.floor(i * slope)\n      result.push(current !== previous ? 1 : 0)\n      previous = current\n  }\n  return result\n}\n\nexport default Pattern;\n\n","import React from 'react';\nimport Nexus from 'nexusui'\nimport './Equalizer.css';\n\nclass Equalizer extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.low = React.createRef()\n    this.mid = React.createRef()\n    this.high = React.createRef()\n  }\n\n  componentDidMount() {\n    this.nxLow = new Nexus.Dial(this.low.current, {\n      'size': [35,35], 'interaction': 'radial', 'mode': 'relative',\n      'min': -20, 'max': 20, 'step': 0, \n      'value':  0\n    });\n    this.nxLow.on('change', v => {\n      this.props.track.updateEQLow(v)\n    });\n\n    this.nxMid = new Nexus.Dial(this.mid.current, {\n      'size': [35,35], 'interaction': 'radial', 'mode': 'relative',\n      'min': -20, 'max': 20, 'step': 0, \n      'value':  0\n    });\n    this.nxMid.on('change', v => {\n      this.props.track.updateEQMid(v)\n    });\n\n    this.nxHigh = new Nexus.Dial(this.high.current, {\n      'size': [35,35], 'interaction': 'radial', 'mode': 'relative',\n      'min': -20, 'max': 20, 'step': 0, \n      'value':  0\n    });\n    this.nxHigh.on('change', v => {\n      this.props.track.updateEQHigh(v)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Equalizer\">\n        <label>┌EQUALIZER┐</label>\n        <div className=\"eqControlWrap\">\n          <div className=\"knobWrap\">\n            <div ref={this.low} />\n            <label>low</label>\n          </div>\n          <div className=\"knobWrap\">\n            <div ref={this.mid} />\n            <label>mid</label>\n          </div>\n          <div className=\"knobWrap\">\n            <div ref={this.high} />\n            <label>high</label>\n          </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Equalizer;","import React from 'react';\nimport Nexus from 'nexusui'\nimport './Volume.css';\n\nclass Volume extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.volumeSlider = React.createRef()\n    this.verbSlider = React.createRef()\n    this.delaySlider = React.createRef()\n  }\n\n  componentDidMount() {\n    let size = window.innerWidth <= 415 \n      ? [125,30]\n      : [30,125]\n    this.nxVolumeSlider = new Nexus.Slider(this.volumeSlider.current, {\n      'size': size,\n      'mode': 'absolute',\n      'min': 0, 'max': 127, 'step': 1,\n      'value':  63\n    });\n    this.nxVolumeSlider.on('change', v => {\n      this.props.track.updateVolume(v)\n    });\n\n    this.nxVerbSlider = new Nexus.Slider(this.verbSlider.current, {\n      'size': [25,90],\n      'mode': 'absolute',\n      'min': 0, 'max': 127, 'step': 1,\n      'value': 0\n    });\n    this.nxVerbSlider.on('change', v => {\n      this.props.track.updateVerbSend(v)\n    });\n\n    this.nxDelaySlider = new Nexus.Slider(this.delaySlider.current, {\n      'size': [25,90],\n      'mode': 'absolute',\n      'min': 0, 'max': 127, 'step': 1,\n      'value':  0\n    });\n    this.nxDelaySlider.on('change', v => {\n      this.props.track.updateDelaySend(v)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Volume\">\n        <div className=\"sliderWrap\">\n          <div ref={this.volumeSlider} />\n          <label>Volume</label>\n        </div>\n        <div className=\"sliderWrap hideMobile\">\n          <div ref={this.verbSlider} />\n          <label className=\"fxLabel\">Reverb</label>\n        </div>\n        <div className=\"sliderWrap hideMobile\">\n          <div ref={this.delaySlider} />\n          <label className=\"fxLabel\">Delay</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Volume;","import React from 'react';\nimport Nexus from 'nexusui'\nimport './KickControl.css';\n\nclass KickControl extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    this.distortion = React.createRef()\n    this.cutoff = React.createRef()\n    this.resonance = React.createRef()\n    this.fm = React.createRef()\n    this.frequency = React.createRef()\n\n    this.state = {\n      fm: 2.9,\n      frequency: 47,\n    }\n  }\n\n  componentDidMount() {\n    this.nxDistortion = new Nexus.Dial(this.distortion.current, {\n      'size': [55,55], 'interaction': 'radial', 'mode': 'relative',\n      'min': 0, 'max': 127, 'step': 1, \n      'value':  0.125 * 127\n    });\n    this.nxDistortion.on('change', v => {\n      this.props.track.updateDistortion(v)\n    });\n\n    this.nxCutoff = new Nexus.Dial(this.cutoff.current, {\n      'size': [40,40], 'interaction': 'radial', 'mode': 'relative',\n      'min': 40, 'max': 80, 'step': 0,\n      'value':  60\n    });\n    this.nxCutoff.on('change', v => {\n      this.props.track.updateCutoff(v)\n    })\n\n    this.nxResonance = new Nexus.Dial(this.resonance.current, {\n      'size': [40,40], 'interaction': 'radial', 'mode': 'relative',\n      'min': 0, 'max': 25, 'step': 0,\n      'value':  10\n    });\n    this.nxResonance.on('change', v => {\n      this.props.track.updateResonance(v)\n    })\n\n    this.nxFM = new Nexus.Dial(this.fm.current, {\n      'size': [40,40], 'interaction': 'radial', 'mode': 'relative',\n      'min': 0.5, 'max': 9, 'step': 0,\n      'value':  2.9\n    });\n    this.nxFM.on('change', v => {\n      this.props.track.updateFM(v)\n    })\n\n    this.nxFrequency = new Nexus.Dial(this.frequency.current, {\n      'size': [55,55], 'interaction': 'radial', 'mode': 'relative',\n      'min': 40, 'max': 80, 'step': 0,\n      'value':  47\n    });\n    this.nxFrequency.on('change', v => {\n      this.props.track.updateFreq(v)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"KickControl\">\n        <div className=\"knobWrap\">\n          <div ref={this.frequency} />\n          <label>ƒreq</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.cutoff} />\n          <label>subƒ</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.resonance} />\n          <label>sub vol</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.fm} />\n          <label>FM</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.distortion} />\n          <label>dist</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default KickControl;","import React from 'react';\nimport Nexus from 'nexusui'\nimport './HatsControl.css';\n\nclass HatsControl extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    this.frequency = React.createRef()\n    this.detune = React.createRef()\n    this.harmonicity = React.createRef()\n  }\n\n  componentDidMount() {\n    this.nxFrequency = new Nexus.Dial(this.frequency.current, {\n      'size': [55,55], 'interaction': 'radial', 'mode': 'relative', \n      'min': 5, 'max': 1050, 'step': 0, \n      'value': 279\n    })\n    this.nxFrequency.on('change', v => {\n      this.props.track.updateFreq(v)\n    })\n\n    this.nxDetune = new Nexus.Dial(this.detune.current, {\n      'size': [40,40], 'interaction': 'radial', 'mode': 'relative',\n      'min': 0.1, 'max': 5000, 'step': 0, \n      'value': 926\n    })\n    this.nxDetune.on('change', v => {\n      this.props.track.updateDetune(v)\n    })\n\n    this.nxHarmonicity = new Nexus.Dial(this.harmonicity.current, {\n      'size': [55,55], 'interaction': 'radial', 'mode': 'relative',\n      'min': 0.1, 'max': 10, 'step': 0, \n      'value': 7.85\n    })\n    this.nxHarmonicity.on('change', v => {\n      this.props.track.updateHarmonicity(v)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"HatsControl\">\n        <div className=\"knobWrap\">\n          <div ref={this.frequency} />\n          <label>freq</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.detune} />\n          <label>detune</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.harmonicity} />\n          <label>harmon</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HatsControl;","import React from 'react';\nimport Nexus from 'nexusui'\nimport './SnareControl.css';\n\nclass SnareControl extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    this.noiseType = React.createRef()\n    this.cutoff = React.createRef()\n    this.resonance = React.createRef()\n  }\n\n  componentDidMount() {\n    this.nxNoiseType = new Nexus.RadioButton(this.noiseType.current, {\n      'size': [120,20],\n      'numberOfButtons': 3,\n      'active': 1\n    })\n    this.nxNoiseType.on('change', v => {\n      let res = \"\"\n      if (v === 0) {\n        res = \"white\"\n      } else if (v === 1) {\n        res = \"pink\"\n      } else {\n        res = \"brown\"\n      }\n      this.props.track.updateNoiseType(res)\n    })\n\n    this.nxCutoff = new Nexus.Dial(this.cutoff.current, {\n      'size': [55,55], 'interaction': 'radial', 'mode': 'relative', \n      'min': 60, 'max': 10000, 'step': 0, \n      'value': 7561\n    })\n    this.nxCutoff.on('change', v => {\n      this.props.track.updateCutoff(v)\n    })\n\n    this.nxResonance = new Nexus.Dial(this.resonance.current, {\n      'size': [55,55], 'interaction': 'radial', 'mode': 'relative', \n      'min': 0, 'max': 25, 'step': 0, \n      'value': 9.5\n    })\n    this.nxResonance.on('change', v => {\n      this.props.track.updateResonance(v)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"SnareControl\">\n        <div className=\"knobWrap\">\n          <div ref={this.cutoff} />\n          <label>cutoff</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.noiseType} />\n          <label>noise type</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.resonance} />\n          <label>resonance</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SnareControl;","import React from 'react';\nimport Nexus from 'nexusui'\nimport './PercControl.css';\n\nclass PercControl extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    this.frequency = React.createRef()\n    this.detune = React.createRef()\n    this.distortion = React.createRef()\n    this.fm = React.createRef()\n  }\n\n  componentDidMount() {\n    this.nxFrequency = new Nexus.Dial(this.frequency.current, {\n      'size': [55,55], 'interaction': 'radial', 'mode': 'relative', \n      'min': 100, 'max': 2000, 'step': 0, \n      'value': 281.6\n    })\n    this.nxFrequency.on('change', v => {\n      this.props.track.updateFrequency(v)\n    })\n\n    this.nxDetune = new Nexus.Dial(this.detune.current, {\n      'size': [40,40], 'interaction': 'radial', 'mode': 'relative', \n      'min': 0, 'max': 1000, 'step': 0, \n      'value': 174.3\n    })\n    this.nxDetune.on('change', v => {\n      this.props.track.updateDetune(v)\n    })\n\n    this.nxFM = new Nexus.Dial(this.fm.current, {\n      'size': [40,40], 'interaction': 'radial', 'mode': 'relative', \n      'min': 0.5, 'max': 9, 'step': 0, \n      'value': 0.5\n    })\n    this.nxFM.on('change', v => {\n      this.props.track.updateFM(v)\n    })\n\n    this.nxDistortion = new Nexus.Dial(this.distortion.current, {\n      'size': [55,55], 'interaction': 'radial', 'mode': 'relative', \n      'min': 1, 'max': 100, 'step': 1, \n      'value': 45\n    })\n    this.nxDistortion.on('change', v => {\n      this.props.track.updateDistortion(v)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"PercControl\">\n        <div className=\"knobWrap\">\n          <div ref={this.frequency} />\n          <label>ƒreq</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.detune} />\n          <label>detune</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.fm} />\n          <label>fm</label>\n        </div>\n        <div className=\"knobWrap\">\n          <div ref={this.distortion} />\n          <label>fold</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PercControl;","import React, { Component } from 'react';\nimport { Kick, Hats, Snare, Perc } from '../../ToneRack'\nimport AttackDecay from './components/AttackDecay'\nimport Pattern from './components/Pattern';\nimport Equalizer from './components/Equalizer';\nimport Volume from './components/Volume';\nimport KickControl from './components/KickControl'\nimport HatsControl from './components/HatsControl'\nimport SnareControl from './components/SnareControl'\nimport PercControl from './components/PercControl'\nimport './Channel.css';\n\nclass Channel extends Component {\n\n  constructor(props) {\n    super(props)\n    if (props.part === 'kick') {\n      this.track = new Kick()\n    } else if (props.part === 'hats') {\n      this.track = new Hats()\n    } else if (props.part === 'snare') {\n      this.track = new Snare()\n    } else if (props.part === 'perc') {\n      this.track = new Perc()\n    }\n    if (window.innerWidth >= 450) {\n      this.track.connectNode(props.outputChain.compressor)\n      this.track.connectVerb(props.outputChain.verb)\n      this.track.connectDelay(props.outputChain.delay)\n    } else {\n      this.track.connectNode(props.outputChain.output)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Channel\">\n        <div className=\"titleWrap\">\n        <span className=\"channelName\">\n          {this.props.part.toUpperCase()}\n        </span>\n          <div className=\"channelWrap\">\n            <div className=\"channelStrip\">\n              <AttackDecay track={this.track} />\n              <div className=\"controls\">\n                {\n                  this.props.part === 'kick' &&\n                  <KickControl track={this.track} />\n                }\n                {\n                  this.props.part === 'hats' &&\n                  <HatsControl track={this.track} />\n                }\n                {\n                  this.props.part === 'snare' &&\n                  <SnareControl track={this.track} />\n                }\n                {\n                  this.props.part === 'perc' &&\n                  <PercControl track={this.track} />\n                }\n              </div>\n              <Equalizer track={this.track} />\n            </div>\n            <Pattern track={this.track} isPlaying={this.props.isPlaying} />\n          </div>\n          <Volume track={this.track} fxChain={this.props.outputChain} />\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Channel;\n","import React from 'react';\nimport Nexus from 'nexusui'\nimport Equalizer from '../Channel/components/Equalizer'\nimport './Reverb.css';\n\nclass Reverb extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.decay = React.createRef()\n  }\n\n  componentDidMount() {\n    this.nxDecay = new Nexus.Dial(this.decay.current, {\n      'size': [50,50], 'interaction': 'radial', 'mode': 'relative',\n      'min': 0.1, 'max': 4, 'step': 0, \n      'value':  2.5\n    });\n    this.nxDecay.on('change', v => {\n      this.props.outputChain.updateVerbDecay(v)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Reverb\">\n        REVERB\n        <div className=\"wrap\">\n          <div className=\"knobWrap\">\n            <div ref={this.decay} />\n            <label>decay</label>\n          </div>\n          <Equalizer track={this.props.outputChain} />\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Reverb;\n","import React from 'react';\nimport Nexus from 'nexusui'\nimport './Delay.css';\n\nclass Delay extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.delayTime = React.createRef()\n    this.feedback = React.createRef()\n    this.filterFreq = React.createRef()\n    this.filterRes = React.createRef()\n  }\n\n  componentDidMount() {\n    this.props.outputChain.updateDelayTime(1)\n    this.nxDelayTime = new Nexus.Dial(this.delayTime.current, {\n      'size': [50,50], 'interaction': 'radial', 'mode': 'relative',\n      'min': 0, 'max': 4, 'step': 1, \n      'value':  1\n    });\n    this.nxDelayTime.on('change', v => {\n      this.props.outputChain.updateDelayTime(v)\n    });\n\n    this.nxFeedback = new Nexus.Dial(this.feedback.current, {\n      'size': [50,50], 'interaction': 'radial', 'mode': 'relative',\n      'min': 0.1, 'max': 0.9, 'step': 0, \n      'value':  0.3\n    });\n    this.nxFeedback.on('change', v => {\n      this.props.outputChain.updateDelayFeedback(v)\n    });\n\n    this.nxFilterFreq = new Nexus.Dial(this.filterFreq.current, {\n      'size': [40,40], 'interaction': 'radial', 'mode': 'relative',\n      'min': 100, 'max': 40000, 'step': 0, \n      'value':  20000\n    });\n    this.nxFilterFreq.on('change', v => {\n      this.props.outputChain.updateDelayFilterCutoff(v)\n    });\n\n    this.nxFilterRes = new Nexus.Dial(this.filterRes.current, {\n      'size': [40,40], 'interaction': 'radial', 'mode': 'relative',\n      'min': 0.1, 'max': 20, 'step': 0, \n      'value':  10\n    });\n    this.nxFilterRes.on('change', v => {\n      this.props.outputChain.updateDelayFilterResonance(v)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Delay\">\n        DELAY\n        <div className=\"wrap\">\n          <div className=\"knobWrap\">\n            <div ref={this.delayTime} />\n            <label>time</label>\n          </div>\n          <div className=\"knobWrap\">\n            <div ref={this.feedback} />\n            <label>feedback</label>\n          </div>\n          <div className=\"knobWrap\">\n            <div ref={this.filterFreq} />\n            <label>filter<br/>freq</label>\n          </div>        \n          <div className=\"knobWrap\">\n            <div ref={this.filterRes} />\n            <label>filter<br/>res</label>\n          </div>      \n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Delay;\n","import React from 'react';\nimport Nexus from 'nexusui'\nimport './Compressor.css';\n\nclass Compressor extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.threshold = React.createRef()\n    this.ratio = React.createRef()\n  }\n\n  componentDidMount() {\n    this.nxThreshold = new Nexus.Dial(this.threshold.current, {\n      'size': [50,50], 'interaction': 'radial', 'mode': 'relative',\n      'min': 1, 'max': 30, 'step': 0, \n      'value':  10\n    });\n    this.nxThreshold.on('change', v => {\n      this.setState({threshold: v})\n      this.props.outputChain.updateCompressorThreshold(v * -1)\n    });\n\n    this.nxRatio = new Nexus.Dial(this.ratio.current, {\n      'size': [50,50], 'interaction': 'radial', 'mode': 'relative',\n      'min': 1, 'max': 10, 'step': 0, \n      'value':  2\n    });\n    this.nxRatio.on('change', v => {\n      this.setState({ratio: v})\n      this.props.outputChain.updateCompressorRatio(v)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Compressor\">\n        COMPRESSOR\n        <div className=\"wrap\">\n          <div className=\"knobWrap\">\n            <div ref={this.threshold} />\n            <label>threshold</label>\n          </div>\n          <div className=\"knobWrap\">\n            <div ref={this.ratio} />\n            <label>ratio</label>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Compressor;\n","import React from 'react';\nimport * as Tone from 'tone'\nimport Nexus from 'nexusui'\nimport './Power.css';\n\nclass Power extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.powerSwitch = React.createRef()\n    this.bpmNumber = React.createRef()\n    Tone.Transport.bpm.value = 112\n  }\n\n  componentDidMount() {\n    this.nxPowerSwitch = new Nexus.Toggle(this.powerSwitch.current, {\n      'size': [60,30],\n      'state': false\n    })\n    this.nxPowerSwitch.on('change', v => {\n      Tone.start()\n      this.props.stateHandler(v)\n      if (v === true) {\n        if (Tone.context.state !== 'running') {\n          Tone.context.resume();\n        }\n        Tone.Transport.start(\"+0.1\");\n      } else {\n        Tone.Transport.stop();\n      }\n    })\n\n    this.nxTempoNumber = new Nexus.Number(this.bpmNumber.current, {\n      'size': [41,30],\n      'value': 112,\n      'min': 30,\n      'max': 150,\n      'step': 1\n    })\n    this.nxTempoNumber.on('change', v => {\n      Tone.Transport.bpm.value = v\n      this.props.outputChain.refreshDelayTime() \n    });  \n    this.nxTempoNumber.colorize(\"fill\", \"rgba(255,255,255,0.66)\");\n  }\n\n  render() {\n    return (\n      <div className=\"Power\">\n        <div className=\"wrap\">\n          <div className=\"knobWrap\">\n            <label>\n              <div ref={this.powerSwitch} />\n              power\n            </label>\n          </div>\n          <div className=\"knobWrap\">\n            <label>\n              <div ref={this.bpmNumber} />\n              bpm\n            </label>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Power;\n","import React, { Component } from 'react';\nimport Nexus from 'nexusui'\nimport Channel from './components/Channel/Channel'\nimport Reverb from './components/Reverb/Reverb'\nimport Delay from './components/Delay/Delay'\nimport Compressor from './components/Compressor/Compressor'\nimport Power from './components/Power/Power'\nimport { OutputChain } from './ToneRack'\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    Nexus.colors.fill = \"rgba(225,225,225,0.2)\"\n    Nexus.colors.accent = \"rgba(34, 147, 147)\"\n    this.outputChain = new OutputChain() \n    this.state = {\n      isPlaying: false\n    }\n  }\n\n  isPlaying = (state) => {\n    this.setState({isPlaying: state})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"appWrap\">\n          <div className=\"channelWrap\">\n            <Power outputChain={this.outputChain} stateHandler={this.isPlaying}/>\n            <Compressor outputChain={this.outputChain}/>\n            <Reverb outputChain={this.outputChain}/>\n            <Delay outputChain={this.outputChain}/>\n            <Channel part={'kick'} outputChain={this.outputChain} isPlaying={this.state.isPlaying}/>\n            <Channel part={'hats'} outputChain={this.outputChain} isPlaying={this.state.isPlaying}/>\n            <Channel part={'snare'} outputChain={this.outputChain} isPlaying={this.state.isPlaying}/>\n            <Channel part={'perc'} outputChain={this.outputChain} isPlaying={this.state.isPlaying}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}